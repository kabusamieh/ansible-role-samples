# Deal with any temporary root password first.
- name: "Test root login."
  command: '/bin/mysql --defaults-extra-file=/root/.my.cnf -e "show databases"'
  ignore_errors: True
  register: root_test

- name: "Find temporary password."
  include_tasks: find.yml
  when:
    - root_test.rc != 0
    - mysql_root_password is not defined
  loop:
    - /var/log/mysqld.log
    - /var/lib/mysql/mysqld.log

# We have to use shell command here because the mysql modules don't work with "expired" passwords.
- name: "Set interim root password."
  command:
    argv:
      - /bin/mysql
      - "-u"
      - root
      - "-p{{ mysql_root_password }}"
      - "--connect-expired-password"
      - "-e"
      - "ALTER USER 'root'@'localhost' IDENTIFIED BY '{{ mysql_interim_password }}';"
  when:
    - mysql_root_password is defined
    - mysql_root_password | length > 0
  ignore_errors: true

- name: "Set validate_password policy."
  mysql_variables:
    variable:  validate_password.policy
    value: LOW
    mode: persist
    login_user: root
    login_password: "{{ mysql_interim_password }}"
  ignore_errors: true

- name: "Set root password from interim password."
  mysql_user:
    name: root
    password: "{{ mysql_root_unencrypted }}"
    login_user: root
    login_password: "{{ mysql_interim_password }}"
  ignore_errors: true

- name: "Get rid of old root password."
  mysql_user:
    name: root
    password: "{{ mysql_root_unencrypted }}"
    login_user: root
    login_password: oldpass
    priv: '*.*:ALL,GRANT'
    host: localhost
  ignore_errors: true
